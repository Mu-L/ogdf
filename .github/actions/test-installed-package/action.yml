name: 'Test Installed Package'
inputs:
  bin_path:
    description: "absolute path to binary install directory for windows"
  exc_special_path:
    description: "absolute path to doc/examples/special"
  cmake_test_args:
    description: "string"

runs:
  using: "composite"
  steps:
    - name: Test installed build results
      shell: bash
      run: |
        set -x
        mkdir build-test && cd build-test
        export CCACHE_BASEDIR="$(pwd)"
        export PATH="${{ inputs.bin_path }}:$PATH" #windows
        echo "$PATH"
        cmake ${{ inputs.exc_special_path }} --debug-find ${{ inputs.cmake_test_args }}

        cmake --build . --config Debug
        cmake --build . --config Release

        has_error=0
        run_executable() {
            local path="$1"

            if [[ ! -x "$path" ]]; then
                echo "ERROR: File not found/executable: $path"
                has_error=1
                return
            fi

            echo
            echo "--- Running: $path ---"
            exit_code=0
            "$path" || exit_code=$?
            echo "$path exited with code $exit_code"

            if [[ $exit_code -ne 0 ]]; then
                has_error=1
            fi
        }

        run_executable "Release/check-build-mode${{ runner.os == 'Windows' && '.exe' || '' }}"
        run_executable "Debug/check-build-mode${{ runner.os == 'Windows' && '.exe' || '' }}"

        if [[ $has_error -ne 0 ]]; then
            exit 1
        else
            exit 0
        fi

    - name: Try running directly on windows
      shell: pwsh
      run: |
        $env:PATH += ";${{ inputs.bin_path }}"
        echo $env:PATH
        
        $script:hasError = $false
        
        function Run-Executable {
            param (
                [string]$path
            )
        
            Write-Host "--- Running: $path ---"
            try {
                $output = & $path 2>&1
                $exitCode = $LASTEXITCODE
                Write-Host $output
                Write-Host "$path exited with code $exitCode"
        
                if ($exitCode -ne 0) {
                    $script:hasError = $true
                }
            } catch {
                Write-Host "ERROR: Exception when running '$path': $_"
                $script:hasError = $true
            }
        }
        
        cd build-test
        Run-Executable "Release/check-build-mode.exe"
        Run-Executable "Debug/check-build-mode.exe"
        
        if ($script:hasError) {
            exit 1
        } else {
            exit 0
        }
      if: ${{ runner.os == 'Windows' }}
